repositories {
    mavenCentral()
    maven { url 'http://raw.github.com/wada811/Android-Material-Design-Colors/master/repository/' }

}

def AAVersion = '3.3.2'
def packageName = 'net.dragora.mttweather'

apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'android-apt'

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.2'

    defaultConfig {
        applicationId "$packageName"
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

retrolambda {
    jvmArgs '-noverify'
}


dependencies {

    compile project(':reark')

    compile fileTree(dir: 'libs', include: ['*.jar'])


    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:support-v4:23.1.1'
    compile 'com.android.support:design:23.1.1'

    //AA
    apt "org.androidannotations:androidannotations:$AAVersion"
    compile "org.androidannotations:androidannotations-api:$AAVersion"

    //RETROFIT
    compile 'com.squareup.okhttp:okhttp:2.5.0'
    compile 'com.squareup.retrofit:retrofit:1.9.0'

    //GSON
    compile 'com.google.code.gson:gson:2.5'

    //LEAKCANARY
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'

    //UltimateRecyclerView
    compile 'com.marshalchen.ultimaterecyclerview:library:0.3.18'

    //DAGGER
    apt 'com.google.dagger:dagger-compiler:2.0.2'
    compile 'com.google.dagger:dagger:2.0.2'
    compile 'javax.annotation:jsr250-api:1.0'

    // JAVA 8 Stream
    compile 'com.annimon:stream:1.0.5'

    // RxJava
    compile 'io.reactivex:rxjava:1.0.14'
    compile 'io.reactivex:rxandroid:1.0.1'

    // Stetho
    debugCompile 'com.facebook.stetho:stetho:1.2.0'
    debugCompile 'com.facebook.stetho:stetho-okhttp:1.2.0'

    // Schematic
    apt 'net.simonvt.schematic:schematic-compiler:0.6.4'
    compile 'net.simonvt.schematic:schematic:0.6.4'
    // Material Colors
    compile 'com.wada811:android-material-design-colors:2.0.0'


    testCompile 'junit:junit:4.12'

    androidTestCompile 'com.android.support:support-annotations:23.1.1'
    androidTestCompile 'com.android.support.test:runner:0.4.1'
    androidTestCompile 'com.android.support.test:rules:0.4.1'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'
    androidTestCompile('com.android.support.test.espresso:espresso-contrib:2.2.1') {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    }
    androidTestCompile('com.squareup.retrofit:retrofit-mock:1.9.0') {
        exclude group: 'com.google.code.gson', module: 'gson'
    }
    androidTestCompile('com.squareup.assertj:assertj-android:1.0.0') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
}


apt {
    arguments {
        androidManifestFile variant.outputs[0]?.processResources?.manifestFile
        // if you have multiple outputs (when using splits), you may want to have other index than 0

        // you should set your package name here if you are using different application IDs
        // resourcePackageName "your.package.name"

        // You can set optional annotation processing options here, like these commented options:
        // logLevel 'INFO'
        // logFile '/var/log/aa.log'
    }
}

// Get the path to ADB.  Required when running tests directly from Android Studio.
// Source: http://stackoverflow.com/a/26771087/112705
def adb = android.getAdbExe().toString()
def command = "$adb shell pm grant $packageName android.permission.SET_ANIMATION_SCALE".split(' ')

task grantAnimationPermission(type: Exec, dependsOn: 'installDebug') {
    println ""
    println '================================================='
    println 'Granting permission to disable animations'
    commandLine command
    println '================================================='
}

afterEvaluate {
    // When launching individual tests from Android Studio, it seems that only the assemble tasks
    // get called directly, not the install* versions
    tasks.each { task ->
        if (task.name.startsWith('assembleDebugAndroidTest')) {
            task.dependsOn grantAnimationPermission
        }
    }
}

